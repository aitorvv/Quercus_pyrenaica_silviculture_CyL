so_expertos$id_scnr <- 'expertos'
so_qp2$id_scnr <- 'qp2'
so_mix$id_scnr <- 'mix'
# make a list of dfs
list_of_dfs <- list(sg_control, sg_expertos, sg_qp2, sg_mix, so_control, so_expertos, so_qp2, so_mix)
# manage all dfs
all_plots <- data.frame()
for (k in list_of_dfs){
# delete I and M trees
k <- k[is.na(k$status), ]
# create dbh classes
plot <- plyr::ddply(k, c('Plot_ID', 'id_scnr'), summarise,
CD_0_75 = sum(ifelse(dbh <= 7.5, expan, 0), na.rm = TRUE),
CD_75_125 = sum(ifelse(dbh > 7.5 & dbh <= 12.5, expan, 0), na.rm = TRUE),
CD_125_175 = sum(ifelse(dbh > 12.5 & dbh <= 17.5, expan, 0), na.rm = TRUE),
CD_175_225 = sum(ifelse(dbh > 17.5 & dbh <= 22.5, expan, 0), na.rm = TRUE),
CD_225_275 = sum(ifelse(dbh > 22.5 & dbh <= 27.5, expan, 0), na.rm = TRUE),
CD_275_325 = sum(ifelse(dbh > 27.5 & dbh <= 32.5, expan, 0), na.rm = TRUE),
CD_325_375 = sum(ifelse(dbh > 32.5 & dbh <= 37.5, expan, 0), na.rm = TRUE),
CD_375_425 = sum(ifelse(dbh > 37.5 & dbh <= 42.5, expan, 0), na.rm = TRUE),
CD_425_ = sum(ifelse(dbh > 42.5, expan, 0), na.rm = TRUE)
)
# organize data
plot <- select(plot, -c(Plot_ID, id_scnr))
plot <- data.frame(t(plot))
plot <- dplyr::rename(plot, N = t.plot.)
plot$CD <- c(5, 10, 15, 20, 25, 30, 35, 40, 45)
plot$Inventory_ID <- paste(unique(toupper(k$Plot_ID)), unique(k$id_scnr), sep = '_')
plot$Plot_ID <- unique(toupper(k$Plot_ID))
plot$Scenario <- unique(k$id_scnr)
# round to units
plot$N <- round(plot$N, digits = 0)
# add plot to the main df
all_plots <- rbind(all_plots, plot)
}
# rename scenarios
all_plots$Escenario <- gsub('qp2', 'gal', all_plots$Scenario)
all_plots$Escenario <- gsub('expertos', 'cyl', all_plots$Scenario)
# and plots
all_plots$Plot_ID <- gsub('SG02_MIX', 'SG02 ', all_plots$Plot_ID)
all_plots$Plot_ID <- gsub('SO02_MIX', 'SO02 ', all_plots$Plot_ID)
# graph joined
ggplot(all_plots, aes(x = CD, y = N, fill = Escenario)) +
# data and labels
geom_bar(stat = 'identity', position = position_dodge()) +
# geom_text(aes(label = N), hjust = 0, vjust = -1.5, size = 5, color = 'darkred') +
# titles
labs(# title = 'Diametric distribution obtained after simulate different scenarios',
x = 'Diametric class (cm)',
y = 'Density (trees/ha)') +
# theme
theme_minimal() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.title = element_text(size = 20, hjust = 0.5), # title
plot.subtitle = element_text(size = 15, hjust = 0.5, face = "italic"),
axis.title = element_text(size = 15, face = 'bold'),  # axis
axis.text = element_text(size = 14),  # axis text
legend.title = element_text(size = 15),  # legend title
legend.position = 'bottom',  # legend position
legend.text = element_text(size = 14)) +  # legend content
scale_fill_manual(name = 'Scenarios', values = c('#708090', '#228B22', '#FF7F50', '#DAA520')) +
# split by plot
facet_wrap(~ Plot_ID) +  #, scales = 'free')
theme(strip.text.x = element_text(size = 15, face = 'bold'))
# ggsave(filename = '4_figures/1_dbh_distribution_simulation_2.png', device = 'png', units = 'mm', dpi = 600,
#        width = 450, height = 300)
ggsave(filename = '4_figures/resized/1_dbh_distribution_simulation_2.png', device = 'png', units = 'mm', dpi = 300,
width = 450, height = 300)
# libraries
library(readxl)
library(plyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tidyverse)
# set directory
#setwd("/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture")
setwd("D:/PhD_UVa/1_Topics/1_LifeRebollo-silviculture")
# list of different inventories to graph
my_list <- list('SG', 'SO', 'SG_irregular', 'SO_irregular')
#main_path <- "/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/2_simanfor/output_ES/"
main_path <- "D:/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/2_simanfor/output_ES/"
my_inventoires <- list('LR_SG02', 'LR_SO02', 'LR_irregular')
#main_fig_path <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/'
main_fig_path <- 'D:/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/'
# get functions
source('3_code/2.0_group_simanfor_data.R') # get data
#source('3_code/2.1_graph_templates.R') # get graphs functions
source('3_code/2.1_graph_templates-resized.R') # get graphs functions
# set directory
setwd("/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture")
# list of different inventories to graph
my_list <- list('SG', 'SO', 'SG_irregular', 'SO_irregular')
main_path <- "/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/2_simanfor/output_ES/"
my_inventoires <- list('LR_SG02', 'LR_SO02', 'LR_irregular')
main_fig_path <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/'
main_fig_path <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/'
# get functions
source('3_code/2.0_group_simanfor_data.R') # get data
#source('3_code/2.1_graph_templates.R') # get graphs functions
source('3_code/2.1_graph_templates-resized.R') # get graphs functions
# get accumulated values for all inventories
df_accum <- get_accumated_values(main_path)
write.csv(df_accum, '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/2.2_simulation_accumulated_values.csv',
row.names = FALSE)
df_accum_LR <- accumulated_simanfor_data_final_values(main_path, "LR")
write.csv(df_accum_LR, '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/2.2_simulation_accumulated_values_LifeRebollo.csv',
row.names = FALSE)
df_deadwood <- deadwood_index_on_simulation(main_path)
# set directory
setwd("/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture")
# get functions
source('3_code/2.0_group_simanfor_data.R') # get data
df_deadwood <- deadwood_index_on_simulation(main_path)
# count the number of times that the index is 1 (good biodiversity value)
df_index <- df %>%
group_by(File_name) %>%
summarise(
# Numero_ejecuciones_escenario = n(),
Numero_ejercuciones_con_G = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR != '-', na.rm = TRUE),
Numero_ejercuciones_con_V = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR != '-', na.rm = TRUE),
Indice_biodiversidad_madera_muerta_G_CESEFOR = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR == 1, na.rm = TRUE),
Indice_biodiversidad_madera_muerta_V_CESEFOR = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR == 1, na.rm = TRUE))
# filter executions
df <- plots[plots$Accion == 'Ejecución', ]
df_deadwood <- deadwood_index_on_simulation(main_path)
# count the number of times that the index is 1 (good biodiversity value)
df_index <- df %>%
group_by(File_name) %>%
summarise(
# Numero_ejecuciones_escenario = n(),
Numero_ejercuciones_con_G = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR != '-', na.rm = TRUE),
Numero_ejercuciones_con_V = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR != '-', na.rm = TRUE),
Indice_biodiversidad_madera_muerta_G_CESEFOR = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR == 1, na.rm = TRUE),
Indice_biodiversidad_madera_muerta_V_CESEFOR = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR == 1, na.rm = TRUE))
View(df_index)
View(df)
View(df_index)
# filter executions
df <- plots[plots$Accion == 'Ejecución', ]
# count the number of times that the index is 1 (good biodiversity value)
df_index <- df %>%
group_by(File_name) %>%
summarise(
# Numero_ejecuciones_escenario = n(),
Numero_ejercuciones_con_G = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR != '-', na.rm = TRUE),
Numero_ejercuciones_con_V = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR != '-', na.rm = TRUE),
Indice_biodiversidad_madera_muerta_G_CESEFOR = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR == 1, na.rm = TRUE),
Indice_biodiversidad_madera_muerta_V_CESEFOR = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR == 1, na.rm = TRUE))
# count the number of times that the index is 1 (good biodiversity value)
df_index <- df %>%
dplyr::group_by(File_name) %>%
dplyr::summarise(
# Numero_ejecuciones_escenario = n(),
Numero_ejercuciones_con_G = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR != '-', na.rm = TRUE),
Numero_ejercuciones_con_V = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR != '-', na.rm = TRUE),
Indice_biodiversidad_madera_muerta_G_CESEFOR = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR == 1, na.rm = TRUE),
Indice_biodiversidad_madera_muerta_V_CESEFOR = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR == 1, na.rm = TRUE))
View(df_index)
# count the number of times that the index is 1 (good biodiversity value)
df_index <- df %>%
dplyr::group_by(File_name) %>%
dplyr::summarise(
Numero_ejecuciones_escenario = n(),
Numero_ejercuciones_con_G = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR != '-', na.rm = TRUE),
Numero_ejercuciones_con_V = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR != '-', na.rm = TRUE),
Indice_biodiversidad_madera_muerta_G_CESEFOR = sum(Indice_biodiversidad_madera_muerta_G_CESEFOR == 1, na.rm = TRUE),
Indice_biodiversidad_madera_muerta_V_CESEFOR = sum(Indice_biodiversidad_madera_muerta_V_CESEFOR == 1, na.rm = TRUE))
View(df_index)
# set directory
setwd("/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture")
# list of different inventories to graph
my_list <- list('SG', 'SO', 'SG_irregular', 'SO_irregular')
main_path <- "/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/2_simanfor/output_ES/"
my_inventoires <- list('LR_SG02', 'LR_SO02', 'LR_irregular')
# set directory
setwd("/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture")
# list of different inventories to graph
my_list <- list('SG', 'SO', 'SG_irregular', 'SO_irregular')
main_path <- "/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/2_simanfor/output_ES/"
my_inventoires <- list('LR_SG02', 'LR_SO02', 'LR_irregular')
main_fig_path <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/'
# get functions
source('3_code/2.0_group_simanfor_data.R') # get data
#source('3_code/2.1_graph_templates.R') # get graphs functions
source('3_code/2.1_graph_templates-resized.R') # get graphs functions
# get accumulated values for all inventories
df_accum <- get_accumated_values(main_path)
write.csv(df_accum, '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/2.2_simulation_accumulated_values.csv',
row.names = FALSE)
df_accum_LR <- accumulated_simanfor_data_final_values(main_path, "LR")
write.csv(df_accum_LR, '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/2.2_simulation_accumulated_values_LifeRebollo.csv',
row.names = FALSE)
df_deadwood <- deadwood_index_on_simulation(main_path)
df_deadwood <- deadwood_index_on_simulation(main_path)
# set directory
setwd("/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture")
# list of different inventories to graph
my_list <- list('SG', 'SO', 'SG_irregular', 'SO_irregular')
main_path <- "/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/2_simanfor/output_ES/"
my_inventoires <- list('LR_SG02', 'LR_SO02', 'LR_irregular')
main_fig_path <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/'
# get functions
source('3_code/2.0_group_simanfor_data.R') # get data
#source('3_code/2.1_graph_templates.R') # get graphs functions
source('3_code/2.1_graph_templates-resized.R') # get graphs functions
df_deadwood <- deadwood_index_on_simulation(main_path)
write.csv(df_deadwood, '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/2.2_simulation_deadwood_index.csv',
row.names = FALSE)
graphs_list <- list()
graphs_list_diversity <- list()  # added later; just in another list to avoid changes in the code
# iterate to graph all inventories
for(k in 1:length(my_list)){
# select inventory
path <- my_list[k]
path <- paste(main_path, path, '/', sep = '')
inventory <- my_inventoires[k]
fig_path <- paste(main_fig_path, my_list[k], '/', sep = '')
# get data
df <- group_simanfor_data(path, inventory)
#### Graph results ####
#### Density ####
n <- graph_data(df = df, x = df$T, y = df$N, class = df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Density (trees/ha)",
path = paste(fig_path, 'N.png', sep = ''))
#### Mortality ####
dead <- graph_data(df = df, x = df$T, y = df$N_muerto, class = df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Natural mortality (trees/ha)",
path = paste(fig_path, 'mortality.png', sep = ''))
#### Ingrowth ####
ing <- graph_data(df = df, x = df$T, y = df$N_incorporado, class = df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Ingrowth (trees/ha)",
path = paste(fig_path, 'ingrowth.png', sep = ''))
#### G stand ####
g <- graph_data_g(df = df, x = df$T, y = df$G, class = df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Basal area (m²/ha)",
path = paste(fig_path, 'G.png', sep = ''))
#### Hart-Becking ####
hart <- graph_data_hart(df = df, x = df$T, y = df$HartBecking__marco_real, class = df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Hart-Becking index",
path = paste(fig_path, 'Hart.png', sep = ''))
#### Data management - stand and accumulated wood evolution ####
new_df <- accumulated_simanfor_data(path, inventory)
#### Graph results ####
#### WT and C ####
c <- graph_data_2vars(df = new_df, x = new_df$T, y = new_df$CARBON_all, y2 = new_df$WT_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Biomass - Carbon (t/ha)",
path = paste(fig_path, 'W_and_C_all.png', sep = ''))
#### Wood uses ####
v <- graph_data(df = new_df, x = new_df$T, y = new_df$V_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Wood volume (m³/ha)",
path = paste(fig_path, 'V_all.png', sep = ''))
saw <- graph_data(df = new_df, x = new_df$T, y = new_df$SIERRA_LR_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Wood volume (m³/ha)",
path = paste(fig_path, 'saw_all.png', sep = ''))
saw_big <- graph_data(df = new_df, x = new_df$T, y = new_df$SIERRA_GRUESA_LR_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Wood volume (m³/ha)",
path = paste(fig_path, 'saw_big_all.png', sep = ''))
staves <- graph_data(df = new_df, x = new_df$T, y = new_df$DUELAS_INTONA_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Wood volume (m³/ha)",
path = paste(fig_path, 'staves_all.png', sep = ''))
staves_bottom <- graph_data(df = new_df, x = new_df$T, y = new_df$DUELAS_FONDO_INTONA_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Wood volume (m³/ha)",
path = paste(fig_path, 'staves_bottom_all.png', sep = ''))
veneer <- graph_data(df = new_df, x = new_df$T, y = new_df$MADERA_LAMINADA_GAMIZ_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Wood volume (m³/ha)",
path = paste(fig_path, 'veneer_all.png', sep = ''))
various <- graph_data(df = new_df, x = new_df$T, y = new_df$VARIOS_GARCIA_VARONA_all, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Wood volume (m³/ha)",
path = paste(fig_path, 'various_all.png', sep = ''))
#### Size diversity indexes ####
shannon_dbh <- graph_data(df = new_df, x = new_df$T, y = new_df$Shannon_dbh, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Shannon index on diametric classes distribution",
path = paste(fig_path, 'shannon_dbh.png', sep = ''))
shannon_height <- graph_data(df = new_df, x = new_df$T, y = new_df$Shannon_altura, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "Shannon index on height classes distribution",
path = paste(fig_path, 'shannon_height.png', sep = ''))
cv_dbh <- graph_data(df = new_df, x = new_df$T, y = new_df$CV_dbh, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "CV on diametric classes distribution",
path = paste(fig_path, 'cv_dbh.png', sep = ''))
cv_height <- graph_data(df = new_df, x = new_df$T, y = new_df$CV_altura, class = new_df$n_scnr,
x_lab = "Stand age (years)", y_lab = "CV on height classes distribution",
path = paste(fig_path, 'cv_height.png', sep = ''))
# group all the graphs in the same list
graphs_list <- append(graphs_list, list(n, dead, ing, g, hart, c, v, saw, saw_big, staves, staves_bottom, veneer, various))
graphs_list_diversity <- append(graphs_list_diversity, list(shannon_dbh, shannon_height, cv_dbh, cv_height))
# print the name of the inventory
print(paste('printed all the graphs of ', my_list[k], sep = ''))
}
#### Grouped graphs ####
# set the path to save the grouped graphs
#group_path <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/grouped_figures/'
group_path <- 'D:/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/grouped_figures/'
# group the graphs with same x axis
#ggplot()
# ggarrange(graphs_list[[1]], graphs_list[[14]], graphs_list[[27]], graphs_list[[40]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'N.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[2]], graphs_list[[15]], graphs_list[[28]], graphs_list[[41]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'dead.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[3]], graphs_list[[16]], graphs_list[[29]], graphs_list[[42]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'ing.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[4]], graphs_list[[17]], graphs_list[[30]], graphs_list[[43]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'G.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[5]], graphs_list[[18]], graphs_list[[31]], graphs_list[[44]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'Hart.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[6]], graphs_list[[19]], graphs_list[[32]], graphs_list[[45]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'W_and_C_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[7]], graphs_list[[20]], graphs_list[[33]], graphs_list[[46]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'V_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[8]], graphs_list[[21]], graphs_list[[34]], graphs_list[[47]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'saw_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[9]], graphs_list[[22]], graphs_list[[35]], graphs_list[[48]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'saw_big_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[10]], graphs_list[[23]], graphs_list[[36]], graphs_list[[49]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'staves_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[11]], graphs_list[[24]], graphs_list[[37]], graphs_list[[50]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'staves_bottom_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[12]], graphs_list[[25]], graphs_list[[38]], graphs_list[[51]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'veneer_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[13]], graphs_list[[26]], graphs_list[[39]], graphs_list[[52]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'various_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
# Grouped graphs - resized ====
ggarrange(graphs_list[[1]], graphs_list[[14]], graphs_list[[27]], graphs_list[[40]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'N.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
# set the path to save the grouped graphs
group_path <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/4_figures/resized/grouped_figures/'
# group the graphs with same x axis
#ggplot()
# ggarrange(graphs_list[[1]], graphs_list[[14]], graphs_list[[27]], graphs_list[[40]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'N.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[2]], graphs_list[[15]], graphs_list[[28]], graphs_list[[41]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'dead.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[3]], graphs_list[[16]], graphs_list[[29]], graphs_list[[42]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'ing.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[4]], graphs_list[[17]], graphs_list[[30]], graphs_list[[43]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'G.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[5]], graphs_list[[18]], graphs_list[[31]], graphs_list[[44]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'Hart.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[6]], graphs_list[[19]], graphs_list[[32]], graphs_list[[45]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'W_and_C_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[7]], graphs_list[[20]], graphs_list[[33]], graphs_list[[46]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'V_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[8]], graphs_list[[21]], graphs_list[[34]], graphs_list[[47]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'saw_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[9]], graphs_list[[22]], graphs_list[[35]], graphs_list[[48]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'saw_big_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[10]], graphs_list[[23]], graphs_list[[36]], graphs_list[[49]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'staves_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[11]], graphs_list[[24]], graphs_list[[37]], graphs_list[[50]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'staves_bottom_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[12]], graphs_list[[25]], graphs_list[[38]], graphs_list[[51]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'veneer_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
#
# ggarrange(graphs_list[[13]], graphs_list[[26]], graphs_list[[39]], graphs_list[[52]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
#           widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
# ggsave(filename = paste(group_path, 'various_all.png', sep = ''), device = 'png', units = 'mm', dpi = 600, width = 450, height = 300)
# Grouped graphs - resized ====
ggarrange(graphs_list[[1]], graphs_list[[14]], graphs_list[[27]], graphs_list[[40]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'N.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[2]], graphs_list[[15]], graphs_list[[28]], graphs_list[[41]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'dead.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[3]], graphs_list[[16]], graphs_list[[29]], graphs_list[[42]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'ing.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[4]], graphs_list[[17]], graphs_list[[30]], graphs_list[[43]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'G.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[5]], graphs_list[[18]], graphs_list[[31]], graphs_list[[44]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'Hart.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[6]], graphs_list[[19]], graphs_list[[32]], graphs_list[[45]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'W_and_C_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[7]], graphs_list[[20]], graphs_list[[33]], graphs_list[[46]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'V_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[8]], graphs_list[[21]], graphs_list[[34]], graphs_list[[47]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'saw_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[9]], graphs_list[[22]], graphs_list[[35]], graphs_list[[48]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'saw_big_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[10]], graphs_list[[23]], graphs_list[[36]], graphs_list[[49]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'staves_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[11]], graphs_list[[24]], graphs_list[[37]], graphs_list[[50]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'staves_bottom_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[12]], graphs_list[[25]], graphs_list[[38]], graphs_list[[51]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'veneer_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list[[13]], graphs_list[[26]], graphs_list[[39]], graphs_list[[52]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'various_all.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list_diversity[[1]], graphs_list_diversity[[5]], graphs_list_diversity[[9]], graphs_list_diversity[[13]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'shannon_dbh.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list_diversity[[2]], graphs_list_diversity[[6]], graphs_list_diversity[[10]], graphs_list_diversity[[14]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'shannon_height.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list_diversity[[3]], graphs_list_diversity[[7]], graphs_list_diversity[[11]], graphs_list_diversity[[15]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'cv_dbh.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
ggarrange(graphs_list_diversity[[4]], graphs_list_diversity[[8]], graphs_list_diversity[[12]], graphs_list_diversity[[16]], ncol = 2, nrow = 2, common.legend = TRUE, legend = "bottom",
widths = c(1, 1), hjust = -1, labels = c('A', 'B', 'C', 'D'), align = 'hv', font.label = list(size = 12, face = 'bold'))
ggsave(filename = paste(group_path, 'cv_height.png', sep = ''), device = 'png', units = 'mm', dpi = 300, width = 300, height = 300)
# set directory
general_dir <- '/media/aitor/WDE/PhD_UVa/1_Topics/1_LifeRebollo-silviculture/2_simanfor/output_EN/'
setwd(general_dir)
#### Read SIMANFOR outputs (just plot information) ####
plots <- tibble()  # will contain plot data
directory <- list.dirs(path = ".")  # will contain folder names
# for each subfolder...
for (folder in directory){
# each subfolder is stablished as main one
specific_dir <- paste(general_dir, "substract", folder, sep = "")
specific_dir <- gsub("substract.", "", specific_dir)
setwd(specific_dir)
# extract .xlsx files names
files_list <- list.files(specific_dir, pattern="xlsx")
# for each file...
for (doc in files_list){
# read plot data
plot_data <- read_excel(doc, sheet = "Plots")
# create a new column with its name
plot_data$File_name <- doc
# add information to plot df
ifelse(length(plots) == 0, plots <- rbind(plot_data), plots <- rbind(plots, plot_data))
}
}
#### Data management - stand evolution ####
# make a copy of the data
df <- plots
# get scenario code
#df$n_scnr <- substr(df$Scenario_file_name, 17, 19)
df$n_scnr <- sub("LR_|\\.json", "", df$Scenario_file_name)
df$n_scnr <- sub(".json", "", df$n_scnr)
# change labels to a better understanding
#df$n_scnr <- ifelse(df$n_scnr == 'gal_QP2_modificado', 'QP2_modificado', df$n_scnr)
#df$n_scnr <- ifelse(df$n_scnr == 'guia_calidad', 'calidad', df$n_scnr)
#df$n_scnr <- ifelse(df$n_scnr == 'guia_multiple', 'obj_multiple', df$n_scnr)
#df$n_scnr <- ifelse(df$n_scnr == 'comite_expertos', 'c_expertos', df$n_scnr)
# skip QP2 (it has the same data as QP2_modificado) and control
#df <- df[df$n_scnr != 'gal_QP2',]
#df <- df[df$n_scnr != 'control',]
# select useful information about scenarios
df <- select(df, n_scnr, Scenario_age, Action, Harvest_type, Harvest_criteria, Harvest_severity, Trees_to_preserve)
df <- df[!duplicated(df), ]
# filter management not applied to our stands due to age restriction
df <- df[df$Scenario_age >= 50,]
df <- df[!(df$Scenario_age == 50 & df$Action == 'Execution'), ]
# extract part of character string after "_"
df$Scenario_name <- sub(".*_", "", df$n_scnr)
df$Inventory_name <- sub("_.*", "", df$n_scnr)
# new labels to scenarios
df$Scenario_name <- gsub('QP2', 'gal', df$Scenario_name)
df$Scenario_name <- gsub('expertos', 'cyl', df$Scenario_name)
# ver resultados
view(df)
# exportar
write_csv(df, '../../../4_figures/3_summary_scenarios.csv')
